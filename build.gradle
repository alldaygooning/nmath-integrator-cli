plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'nikita'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://packages.orekit.org/repository/maven-snapshots/')
        mavenContent {
            snapshotsOnly()
        }
    }
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
        mavenContent {
            snapshotsOnly()
        }
    }
}	

dependencies {
    implementation("org.matheclipse:matheclipse-core:3.1.0-SNAPSHOT")
    implementation files('/home/gangster/Desktop/Homework (͠≖ ͜ʖ͠≖)/Методы Оптимизации/nmath/build/libs/nmath-1.0.0.jar')
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
    implementation 'org.jline:jline:3.21.0'
    
    // https://mvnrepository.com/artifact/org.json/json
	implementation("org.json:json:20250107")
}

application {
    mainClass = 'nikita.Main'
}

run {
    standardInput = System.in
}

shadowJar {
    archiveClassifier.set("all")
    mergeServiceFiles()
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'

    manifest {
        attributes(
            "Main-Class": application.mainClass,
            "Class-Path": sourceSets.main.runtimeClasspath.collect { it.getName() }.join(' '),
            "Multi-Release": "true"
        )
    }
}

